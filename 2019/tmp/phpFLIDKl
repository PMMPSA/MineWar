#########################################
# ___  ___       ______  _         _    #
# |  \/  |       | ___ \| |       | |   #
# | .  . | _   _ | |_/ /| |  ___  | |_  #
# | |\/| || | | ||  __/ | | / _ \ | __| #
# | |  | || |_| || |    | || (_) || |_  #
# \_|  |_/ \__, |\_|    |_| \___/  \__| #
#           __/ |                       #
#          |___/                        #
#########################################

# The language that should be used in MyPlot
# Available languages: eng, nl, vi, spa, chs, zho, deu, cze
#
# English language pack by @jasonwynn10
# Dutch language pack by @Wies
# Vietnamese language pack by @daany123
# Spanish language pack by @thelucyclub
# Chinese ( ROC ) pack by @jerryzooyoyo
# Chinese ( PRC ) pack by @jerryzooyoyo
# German language pack by @morpheusTP and @SalmonGER
# Czech lanauge pack by @GamakCZ
language: eng

# The data provider where plot data is stored.
# Current providers are: sqlite, mysql, json, and yaml.
DataProvider: sqlite

# contains settings for mysql provider to use when selected
MySQLSettings:
  Host: 127.0.0.1
  Port: 3306
  Username: default
  Password: password
  DatabaseName: MyPlot

# Use an economy with MyPlot. This will allow for plot pricing such as claiming, clearing, etc.
# Currently supported economy plugins: Economy$, PocketMoney
# MyPlot will use any economy plugin found on the server.
# Be sure not to use more than 1 economy plugin!
UseEconomy: false

# Amount of plots to be cached.
# Increasing this number will improve performance, but also increase memory usage.
PlotCacheSize: 256

# When a player enters a plot, a popup with basic info will be shown
ShowPlotPopup: true

# Amount of blocks to reset per tick.
# Increasing this number will speed up '/p clear' and '/p reset' but also increases lag
ClearBlocksPerTick: 256

# These settings will be used when creating a new world with the default generator.
DefaultWorld:

  # Restrict entities (e.g. tnt) from moving except falling
  # This will prevent things like tnt cannons from ruining other plots
  RestrictEntityMovement: true

  # Update liquids (e.g. Water) from updating and moving
  # This will allows things like water to lag the server in plot worlds
  UpdatePlotLiquids: false

  # How much it costs to claim a plot (Economy must be set to 'true')
  ClaimPrice: 0
  # How much it costs to clear a plot (Economy must be set to 'true')
  ClearPrice: 0
  # How much it costs to dispose a plot (Economy must be set to 'true')
  DisposePrice: 0
  # How much it costs to reset a plot (Economy must be set to 'true')
  ResetPrice: 0

  # The size of a plot
  PlotSize: 32
  # The height of a plot
  GroundHeight: 64
  # The width of the road
  RoadWidth: 7

  # The block that the road is made of (Default is Oak Planks)
  RoadBlock: '5:0'
  # The block that plot walls are made of (Default is Stone Slabs)
  WallBlock: '44:0'
  # The block used as the plot floor (Default is Grass)
  PlotFloorBlock: '2:0'
  # The block that fills the rest of the plot (Default is Dirt)
  PlotFillBlock: '3:0'
  # The block at the bottom (Default is Bedrock)
  BottomBlock: '7:0'; English language pack for MyPlot
; Created by Wiez, Exxarion, and jasonwynn10
; Updated time : 8/8/2017

; Popup when entering a plot
popup=You entered plot {%0}
popup.owner=Owned by {%0}
popup.available=This plot is open! Use /p claim to claim the plot.
popup.denied=You are denied access to this plot!

; /p info
command.name=plot
command.alias=p
command.desc=Claim and manage your plots
command.usage=/p [help]
command.unknown=Unknown command. Try /p help for a list of commands

subcommand.usage=Usage: {%0}

; Errors that are displayed when the player does something wrong, or the plugin screws up.
error=Whoops! Something went wrong
notinplot=You are not standing inside a plot
notowner=You do not own this plot

confirm=confirm

; The /p help Subcommand
help.name=help
help.desc=Shows the help menu
help.usage=/p help [page: int]
help.header=--- Showing MyPlot help page {%0} of {%1} ---

; The /p addhelper Subcommand
addhelper.name=addhelper
addhelper.alias=addh
addhelper.desc=Add a helper to your plot
addhelper.usage=/p addhelper <player: string>
addhelper.alreadyone={%0} is already a helper of this plot
addhelper.notaplayer=That player is not online right now!
addhelper.success={%0} is now a helper of this plot

; The /p removehelper Subcommand
removehelper.name=removehelper
removehelper.alias=delh
removehelper.desc=Remove a helper from your plot
removehelper.usage=/p removehelper <player: string>
removehelper.notone={%0} is not a helper
removehelper.success={%0} has been removed from plot helpers

; The /p denyplayer Subcommand
denyplayer.name=denyplayer
denyplayer.alias=deny
denyplayer.desc=Deny a player from accessing your plot
denyplayer.usage=/p deny <player: string>
denyplayer.helper={%0} is a helper!
denyplayer.alreadyone={%0} has already been denied from this plot
denyplayer.notaplayer=That player is not online right now!
denyplayer.cannotdeny={%0} cannot be denied!
denyplayer.attempteddeny={%0} attempted to deny you from their plot!
denyplayer.success1={%0} is now denied access to the plot
denyplayer.success2="You were denied access to plot {%0};{%1} by {%2}"

; The /p undenyplayer Subcommand
undenyplayer.name=undenyplayer
undenyplayer.alias=undeny
undenyplayer.desc=Undeny a player from accessing your plot
undenyplayer.usage=/p undeny <player: string>
undenyplayer.notone={%0} is allowed already!
undenyplayer.notaplayer=That player is not online right now!
undenyplayer.success1={%0} has been allowed into the plot
undenyplayer.success2="You were allowed access to plot {%0};{%1} by {%2}"
undenyplayer.failure={%0} is still denied!

; The /p claim Subcommand
claim.name=claim
claim.desc=Claim the current plot you are standing on
claim.usage=/p claim [name: string]
claim.yourplot=You have already claimed this plot
claim.alreadyclaimed=This plot is already claimed by {%0}
claim.maxplots=You reached the limit of {%0} plots per player
claim.nomoney=You do not have enough money to claim this plot
claim.success=You have successfully claimed the plot

; The /p auto Subcommand
auto.name=auto
auto.alias=a
auto.desc=Teleports to the next free plot
auto.usage=/p auto [claim: bool] [name: string]
auto.notplotworld=You are not in a plot world
auto.success="Teleported to free plot ({%0};{%1})"
auto.noplots=Could not find any available plots

; The /p dispose Subcommand
dispose.name=dispose
dispose.desc=Disposes your plot
dispose.usage=/p dispose
dispose.confirm=Are you sure you want to dispose plot {%0} ? If so, use /p dispose confirm
dispose.nomoney=You do not have enough money to dispose this plot
dispose.success=Plot disposed

; The /p reset Subcommand
reset.name=reset
reset.desc=Disposes and clears your plot
reset.usage=/p reset
reset.confirm=Are you sure you want to reset plot {%0} ? If so, use /p reset confirm
reset.nomoney=You do not have enough money to reset this plot
reset.success=Plot reset

; The /p clear Subcommand
clear.name=clear
clear.desc=Clears your plot
clear.usage=/p clear
clear.confirm=Are you sure you want to clear plot {%0} ? If so, use /p clear confirm
clear.nomoney=You do not have enough money to clear this plot
clear.success=Plot cleared

; The /p biome Subcommand
biome.name=biome
biome.desc=Changes your plot biome
biome.usage=/p biome [biome: string]
biome.success=Plot biome changed to {%0}
biome.invalid=That biome does not exist
biome.possible=Possible biomes are: {%0}

; The /p biomes Subcommand
biomes.name=biomes
biomes.desc=List all available biomes
biomes.usage=/p biomes
biomes.possible=Possible biomes are: {%0}

; The /p name Subcommand
name.name=name
name.desc=Sets or changes your plot name
name.usage=/p name <name: string>
name.success=Plot name set to {%0}

; The /p home Subcommand
home.name=home
home.alias=h
home.desc=Travel to your plot
home.usage=/p home [number: int] [world: string]
home.noplots=You do not own any plots in this world
home.notexist=You do not own a plot with id {%0} in this world
home.success=Teleported to plot {%0} in world {%1}
home.error=Could not travel to plot

; The /p homes Subcommand
homes.name=homes
homes.desc=Shows your claimed plots
homes.usage=/p homes [world: string]
homes.noplots=You do not own any plots
homes.header=Plots you own:

; The /p info Subcommand
info.name=info
info.alias=i
info.desc=Shows information about a plot
info.usage=/p info
info.about=Info about plot {%0}
info.plotname=Name: {%0}
info.owner=Owner: {%0}
info.helpers=Helpers: {%0}
info.denied=Denied: {%0}
info.biome=Biome: {%0}

; The /p generate Subcommand - Can only be used by OPs or players with the myplot.command.generate permission
generate.name=generate
generate.alias=gen
generate.desc=Generate a new plot world
generate.usage=/p generate <name: string>
generate.exists=World with name {%0} already exists
generate.gexists=Generator {%0} does not exist
generate.success=Successfully generated plot world {%0}
generate.error=World could not be generated

; The /p give Subcommand
give.name=give
give.desc=Give your plot to someone else
give.usage=/p give [player: string]
give.notonline=That player is not online
give.maxedout=That player has reached the maximum number of plots
give.toself=You cannot give a plot to yourself
give.confirm=Are you sure you want to give plot {%0} to player {%1}? If so, use /p give {%1} confirm
give.success=You have given the plot to {%0}
give.received={%0} gave you their plot, {%1}

; The /p warp Subcommand
warp.name=warp
warp.desc=Teleport to a plot
warp.usage=/p warp <id: int> [world: string]
warp.wrongid="The plot id should be in the format X;Z"
warp.notinplotworld=You are not in a plot world
warp.unclaimed=You cannot warp to an unclaimed plot
warp.success=You are teleported to plot {%0}

; The /p middle Subcommand
middle.name=middle
middle.alias=mid
middle.desc=Teleports the player to exact center of plot at ground level
middle.usage=/p mid
middle.success=Teleporting complete!

; The /p setowner Subcommand
setowner.name=setowner
setowner.desc=Sets the new owner of the plot without charging anything
setowner.usage=/p setowner <player: string>
setowner.maxplots=That player reached their plots limit of {%0}
setowner.success={%0} is now the owner of this plot

; The /p list Subcommand
list.name=list
list.alias=l
list.desc=Shows all plots a player has
list.usage=/p list [player: string]
list.found=Plot {%0} at ({%1};{%2}),